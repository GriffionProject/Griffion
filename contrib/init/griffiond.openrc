#!/sbin/openrc-run

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/griffion/.griffion" ]; then
	GRIFFIOND_DEFAULT_DATADIR="/var/lib/griffion/.griffion"
else
	GRIFFIOND_DEFAULT_DATADIR="/var/lib/griffiond"
fi

GRIFFIOND_CONFIGFILE=${GRIFFIOND_CONFIGFILE:-/etc/griffion/griffion.conf}
GRIFFIOND_PIDDIR=${GRIFFIOND_PIDDIR:-/var/run/griffiond}
GRIFFIOND_PIDFILE=${GRIFFIOND_PIDFILE:-${GRIFFIOND_PIDDIR}/griffiond.pid}
GRIFFIOND_DATADIR=${GRIFFIOND_DATADIR:-${GRIFFIOND_DEFAULT_DATADIR}}
GRIFFIOND_USER=${GRIFFIOND_USER:-${GRIFFION_USER:-griffion}}
GRIFFIOND_GROUP=${GRIFFIOND_GROUP:-griffion}
GRIFFIOND_BIN=${GRIFFIOND_BIN:-/usr/bin/griffiond}
GRIFFIOND_NICE=${GRIFFIOND_NICE:-${NICELEVEL:-0}}
GRIFFIOND_OPTS="${GRIFFIOND_OPTS:-${GRIFFION_OPTS}}"

name="Griffion Core Daemon"
description="Griffion cryptocurrency P2P network daemon"

command="/usr/bin/griffiond"
command_args="-pid=\"${GRIFFIOND_PIDFILE}\" \
		-conf=\"${GRIFFIOND_CONFIGFILE}\" \
		-datadir=\"${GRIFFIOND_DATADIR}\" \
		-daemon \
		${GRIFFIOND_OPTS}"

required_files="${GRIFFIOND_CONFIGFILE}"
start_stop_daemon_args="-u ${GRIFFIOND_USER} \
			-N ${GRIFFIOND_NICE} -w 2000"
pidfile="${GRIFFIOND_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${GRIFFIOND_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${GRIFFIOND_USER}:${GRIFFIOND_GROUP}" \
	"${GRIFFIOND_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${GRIFFIOND_USER}:${GRIFFIOND_GROUP}" \
	"${GRIFFIOND_PIDDIR}"

	checkpath -f \
	-o "${GRIFFIOND_USER}:${GRIFFIOND_GROUP}" \
	-m 0660 \
	"${GRIFFIOND_CONFIGFILE}"

	checkconfig || return 1
}

checkconfig()
{
	if grep -qs '^rpcuser=' "${GRIFFIOND_CONFIGFILE}" && \
		! grep -qs '^rpcpassword=' "${GRIFFIOND_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run griffiond."
		eerror "The setting must appear in ${GRIFFIOND_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"Griffion Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
